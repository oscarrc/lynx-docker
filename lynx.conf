##########################################################################################
#### OPTIONS
###########################################################################################

## Run in the background as a daemon and accept commands 0 | 1
daemon=0

## Specify data directory
datadir=/lynx

## Set database cache size in megabytes (4 to 16384, default: 450)
dbcache=450

## Imports blocks from external blk000??.dat file on startup
# loadblock=

## Specify location of debug log file: this can be an absolute path or path relative to the data directory (default: debug.log)
debuglogfile=/lynx/debug.log

## Keep at most <n> unconnectable transactions in memory (default: 100)
# maxorphantx=100

## Keep the transaction memory pool below <n> megabytes (default: 5)
# maxmempool=5

## Do not keep transactions in the mempool longer than <n> hours (default: 336)
# mempoolexpiry=336

## Whether to save the mempool on shutdown and load on restart (default: 1)
# persistmempool=1

## Extra transactions to keep in memory for compact block reconstructions (default: 100)
# blockreconstructionextratxn = 100

## Set the number of script verification threads (-4 to 16, 0 = auto, <0 = leave that many cores free, default: 0)
# par=0

## Specify pid file (default: lynx.pid)
# pid=lynx.pid

## Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to
## delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is
## incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. 
## (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >=550 = automatically prune block files to stay under the specified target size in MiB)
# prune=0

## Start with a bootstraped release (default: 1)
bootstrap=1

## Rebuild chain state from the currently indexed blocks
# reindex-chainstate=0

## Rebuild chain state and block index from the blk*.dat files on disk
reindex=1

## Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)
# sysperms=0

## Maintain a full transaction index, used by the getrawtransaction rpc call (default: 0)
# txindex=0


##########################################################################################
#### CONNECTION OPTIONS
##########################################################################################

## Add a node to connect to and attempt to keep the connection open (see the `addnode` RPC command help for more info)
addnode=node01.getlynx.io
addnode=node02.getlynx.io
addnode=node03.getlynx.io
addnode=node04.getlynx.io
addnode=node05.getlynx.io

## Threshold for disconnecting misbehaving peers (default: 100)
# banscore=100

## Number of seconds to keep misbehaving peers from reconnecting (default: 86400)
# bantime=86400

## Bind to given address and always listen on it. Use [host]:port notation for IPv6
# bind=

## Connect only to the specified node(s); -connect=0 disables automatic connections (the rules for this peer are the same as for -addnode)
# connect=

## Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)
# discover=1

## Allow DNS lookups for -addnode, -seednode and -connect (default: 1)
# dns=1

## Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)
# dnsseed = 1

## Specify your own public address
# externalip=

## Always query for peer addresses via DNS lookup (default: 0)
# forcednsseed=0

## Accept connections from outside (default: 1 if no -proxy or -connect)
listen=1

## Automatically create Tor hidden service (default: 1)
listenonion=0

## Maintain at most <n> connections to peers (default: 125)
# maxconnections=125

## Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)
# maxreceivebuffer=5000

## Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)
# maxsendbuffer=1000

## Maximum allowed median peer time offset adjustment. 
## Local perspective of time may be influenced by peers forward or backward by this amount. (default: 2100 seconds)
# maxtimeadjustment=2100

## Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)
# onion=

## Only connect to nodes in network <net> (ipv4, ipv6 or onion)
# onlynet=

## Relay non-P2SH multisig (default: 1)
# permitbaremultisig=1

## Support filtering of blocks and transaction with bloom filters (default 1)
# peerbloomfilters=1

## Listen for connections on <port> (default: 22566 or testnet: 44566)
# port=22566

## Connect through SOCKS5 proxy
# proxy=

## Randomize credentials for every proxy connection. This enables Tor stream isolation (default: 1)
# proxyrandomize=1

## Connect to a node to retrieve peer addresses, and disconnect
# seednode=

## Specify connection timeout in milliseconds (minimum: 1, default: 5000)
# timeout=5000

## Tor control port to use if onion listening enabled (default: 127.0.0.1:9051)
# torcontrol=

## Tor control port password (default: empty)
# torpassword=

## Use UPnP to map the listening port (default: 0)
upnp=1

##  Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6
# whitebind=

## Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). 
## Can be specified multiple times. Whitelisted peers cannot be DoS banned and their transactions are always relayed, 
## even if they are already in the mempool, useful e.g. for a gateway
# whitelist=

## Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: 0)
# maxuploadtarget=0


##########################################################################################
#### WALLET OPTIONS
##########################################################################################

## What type of addresses to use ("legacy", "p2sh-segwit", or "bech32", default: "legacy")
# addresstype=legacy

## What type of change to use ("legacy", "p2sh-segwit", or "bech32"). Default is same as addresstype, except when
## addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)
# changetype=

## Do not load the wallet and disable wallet RPC calls
# disablewallet=0

## Set key pool size to <n> (default: 1000)
# keypool=1000

## A fee rate (in LYNX/kB) that will be used when fee estimation has insufficient data (default: 0.02)
# fallbackfee=0.02

## The fee rate (in LYNX/kB) that indicates your tolerance for discarding change by adding it to the fee (default: 0.0001).
## Note: An output is discarded if it is dust at this rate, but we will always discard up to the dust relay fee and a discard 
## fee above that is limited by the fee estimate for the longest target
# discardfee=0.0001

## Fees (in LYNX/kB) smaller than this are considered zero fee for transaction creation (default: 0.001)
# mintxfee=0.001

## Fee (in LYNX/kB) to add to transactions you send (default: 1.00)
# paytxfee=1.00

## Rescan the block chain for missing wallet transactions on startup
rescan=1

## Attempt to recover private keys from a corrupt wallet on startup
# salvagewallet=0

## Spend unconfirmed change when sending transactions (default: 1)
# spendzeroconfchange=1

## If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: 6)
# txconfirmtarget=6

## Send transactions with full-RBF opt-in enabled (RPC only, default: 0)
# walletrbf=0

## Upgrade wallet to latest format on startup
# upgradewallet=1

## Specify wallet file (within data directory) (default: wallet.dat)
# wallet=wallet.dat

## Make the wallet broadcast transactions (default: 1)
# walletbroadcast=1

## Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)
# walletdir=

## Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)
# walletnotify=

## Delete all wallet transactions and only recover those parts of the blockchain through rescan on startup 
## (1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)
# zapwallettxes=


##########################################################################################
#### DEBUGGING / TESTING
##########################################################################################

## Append comment to the user agent string
## uacomment=

## Output debugging information (default: 0, supplying <category> is  optional). 
## If <category> is not supplied or if <category> = 1, output all debugging information. 
## <category> can be: net, tor,mempool, http, bench, zmq, db, rpc, estimatefee, addrman, selectcoins, 
## reindex, cmpctblock, rand, prune, proxy, mempoolrej, libevent, coindb, qt, leveldb, miner.
debug=miner

## Exclude debugging information for a category. Can be used in conjunction with -debug=1 to 
## output debug logs for all categories except one or more specified categories.
# debugexclude=

## Include IP addresses in debug output (default: 0)
logips=1

## Prepend debug output with timestamp (default: 1)
# logtimestamps=0

## Maximum total fees (in LYNX) to use in a single wallet transaction or raw transaction; 
## setting this too low may abort large transactions (default: 0.10)
# maxtxfee=0.10

## Send trace/debug info to console instead of debug.log file
# printtoconsole=1

## Shrink debug.log file on client startup (default: 1 when no -debug)
shrinkdebugfile=1


##########################################################################################
#### CHAIN SELECTION OPTIONS
##########################################################################################

## Use the test chain
# testnet=1

##########################################################################################
#### NODE RELAY OPTIONS
##########################################################################################

## Equivalent bytes per sigop in transactions for relay and mining (default: 20)
# bytespersigop =20
  
## Relay and mine data carrier transactions (default: 1) 
# datacarrier=1

## Maximum size of data in data carrier transactions we relay and mine (default: 83)
# datacarriersize=83


## Enable transaction replacement in the memory pool (default: 0)  
# mempoolreplacement=1

## Fees (in LYNX/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: 0.00001)
# minrelaytxfee=0.00001

## Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: 1)
# whitelistrelay=0

## Force relay of transactions from whitelisted peers even if they violate local relay policy (default: 1)
# whitelistforcerelay=0


## BLOKC CREATION OPTIONS
  
## Set maximum BIP141 block weight (default: 3996000)
# blockmaxweight=3996000

## Set maximum BIP141 block weight to this * 4. Deprecated, use blockmaxweight
# blockmaxsize=0
       
## Set lowest fee rate (in LYNX/kB) for transactions to be included in block creation. (default: 0.00001)
# blockmintxfee=0.00001

##############################################################################################
#### RPC SERVER OPTIONS
##############################################################################################

## Accept command line and JSON-RPC commands
server=1

## Accept public REST requests (default: 0)
# rest=1

## Bind to given address to listen for JSON-RPC connections. This option is ignored unless 
## rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. 
## This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost, or if rpcallowip has been specified,
## 0.0.0.0 and :: i.e., all addresses)
# rpcbind=
       
## Location of the auth cookie (default: data dir)
# rpccookiefile=

## Username for JSON-RPC connections
rcpuser=lynx     
       
## Password for JSON-RPC connections
rpcpassword=LyNX

## Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>.
## A canonical python script is included in share/rpcuser. The client then connects normally using the
## rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times   
# rpcauth=

## Listen for JSON-RPC connections on <port> (default: 9332 or testnet: 19332)
# rpcport=9332

## Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), 
## a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).
## This option can be specified multiple times
# rpcallowip=<ip>

## Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: 1)
# rpcserialversion=1
       
## Set the number of threads to service RPC calls (default: 4)
# rpcthreads=4
       

##########################################################################################
#### BUILT IN MINER OPTIONS
##########################################################################################

## Disables the built-in miner
# disablebuiltinminer=1

## CPU limit for built-in miner (default: 0.01)
# cpulimitforbuiltinminer=0.01

## Number of threads the built in miner uses for block generation
# threadcountforbuiltinminer=4

## Causes the built-in miner to immediately start working, without waiting for the end of the synchronization of the chain
# disablechecksyncchain=1

## Tipsy id for mining to TipsyMiner see Discord for details
# tipsyid=

## Addresses which will be used for mining if wallet is disable. Addresses whould be separated by ","
# mineraddress=
